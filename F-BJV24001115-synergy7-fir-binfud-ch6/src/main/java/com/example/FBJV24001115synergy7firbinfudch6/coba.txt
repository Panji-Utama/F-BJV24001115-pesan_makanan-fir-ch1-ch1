

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\CopyAll.java
package com.example.FBJV24001115synergy7firbinfudch6;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;

public class CopyAll {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the name of the output text file (with .txt extension): ");
        String outputFileName = scanner.nextLine();

        // Get the current directory
        Path currentDir = Paths.get("").toAbsolutePath();

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(outputFileName))) {
            Files.walk(currentDir)
                    .filter(Files::isRegularFile)
                    .forEach(filePath -> {
                        try {
                            // Write the file name as a comment
                            writer.write("// " + filePath.toString());
                            writer.newLine();

                            // Read the file content and write it to the output file
                            Files.lines(filePath, StandardCharsets.UTF_8).forEach(line -> {
                                try {
                                    writer.write(line);
                                    writer.newLine();
                                } catch (IOException e) {
                                    e.printStackTrace();
                                }
                            });

                            // Add a separator between files
                            writer.newLine();
                            writer.write("// End of " + filePath.getFileName());
                            writer.newLine();
                            writer.newLine();
                        } catch (IOException e) {
                            System.err.println("Error processing file: " + filePath.toString() + " - " + e.getMessage());
                        }
                    });

            System.out.println("All files have been aggregated into " + outputFileName);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

// End of CopyAll.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\FBjv24001115Synergy7FirBinfudCh6Application.java
package com.example.FBJV24001115synergy7firbinfudch6;

import org.modelmapper.ModelMapper;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.data.jpa.repository.config.EnableJpaAuditing;

@SpringBootApplication
@EnableJpaAuditing
public class FBjv24001115Synergy7FirBinfudCh6Application {

	public static void main(String[] args) {
		SpringApplication.run(FBjv24001115Synergy7FirBinfudCh6Application.class, args);
	}

	@Bean
	public ModelMapper modelMapper() {
		return new ModelMapper();
	}

//	public static void main(String[] args) {
//		UserController userController = SpringApplication.run(FBjv24001115Synergy7FirBinfudCh6Application.class, args).getBean(UserController.class);
//		userController.startApplication();
//	}

}

// End of FBjv24001115Synergy7FirBinfudCh6Application.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\config\OpenApiConfig.java
package com.example.FBJV24001115synergy7firbinfudch6.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {
    @Value("${openapi.dev-url}")
    private String devUrl;

    @Value("${openapi.prod-url}")
    private String prodUrl;

    @Bean
    public OpenAPI myOpenAPI() {
        Server devServer = new Server();
        devServer.setUrl(devUrl);
        devServer.setDescription("Server URL in Development environment");

        Server prodServer = new Server();
        prodServer.setUrl(prodUrl);
        prodServer.setDescription("Server URL in Production environment");

        Contact contact = new Contact();
        contact.setEmail("binarfud@gmail.com");
        contact.setName("Panji");
        contact.setUrl("https://firmanpu.tech");

        License mitLicense = new License().name("MIT License")
                .url("https://choosealicense.com/licenses/mit/");

        Info info = new Info()
                .title("Binar Fud Panji")
                .version("1.0")
                .contact(contact)
                .description("This API exposes endpoints to manage Binarfud by Panji.")
                .termsOfService("https://firmanpu.tech")
                .license(mitLicense);

        return new OpenAPI().info(info).servers(List.of(devServer, prodServer));
    }
}

// End of OpenApiConfig.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\HelloWorldController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.List;


public class HelloWorldController {
    @GetMapping("/")
    public ResponseEntity<String> helloWorld() {
        return ResponseEntity.ok("Hello World!");
    }
}

// End of HelloWorldController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\MerchantController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;
import com.example.FBJV24001115synergy7firbinfudch6.service.MerchantService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequestMapping("/api/merchants")
public class MerchantController {

    @Autowired
    private MerchantService merchantService;

    @Autowired
    UserDetailServiceImpl userDetailService;

    @PostMapping
    public ResponseEntity<Merchant> addMerchant(@RequestBody Merchant merchant) {
        return ResponseEntity.ok(merchantService.addMerchant(merchant));
    }

    @PatchMapping("/{id}/status")
    public ResponseEntity<Merchant> updateMerchantStatus(@PathVariable UUID id, @RequestBody Map<String, Boolean> status) {
        return ResponseEntity.ok(merchantService.updateMerchantStatus(id, status.get("open")));
    }

    @GetMapping("/{id}")
    public ResponseEntity<Merchant> getMerchantById(@PathVariable UUID id) {
        return ResponseEntity.ok(merchantService.getMerchantById(id));
    }

    @GetMapping
    public ResponseEntity<List<Merchant>> getOpenMerchants() {
        return ResponseEntity.ok(merchantService.getOpenMerchants());
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteMerchant(@PathVariable UUID id) {
        merchantService.deleteMerchant(id);
        return ResponseEntity.noContent().build();
    }
}


// End of MerchantController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\OrderController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Orders;
import com.example.FBJV24001115synergy7firbinfudch6.service.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("/api/orders")
public class OrderController {

    @Autowired
    private OrderService orderService;

    @PostMapping
    public ResponseEntity<Orders> createOrder(@RequestBody Orders order) {
        Orders createdOrder = orderService.createOrder(order);
        return ResponseEntity.ok(createdOrder);
    }

    @GetMapping
    public ResponseEntity<List<Orders>> getAllOrders() {
        return ResponseEntity.ok(orderService.getAllOrders());
    }

    @GetMapping("/{id}")
    public ResponseEntity<Orders> getOrderById(@PathVariable UUID id) {
        return ResponseEntity.ok(orderService.getOrderById(id));
    }
}
// End of OrderController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\OrderDetailController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

public class OrderDetailController {
}

// End of OrderDetailController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\ProductController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Product;
import com.example.FBJV24001115synergy7firbinfudch6.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("/api/products")
public class ProductController {

    @Autowired
    private ProductService productService;

    @PostMapping
    public ResponseEntity<Product> addProduct(@RequestBody Product product) {
        return ResponseEntity.ok(productService.addProduct(product));
    }

    @PutMapping("/{id}")
    public ResponseEntity<Product> updateProduct(@PathVariable UUID id, @RequestBody Product product) {
        product.setId(id);
        return ResponseEntity.ok(productService.updateProduct(product));
    }

    @GetMapping
    public ResponseEntity<List<Product>> getAllProducts() {
        return ResponseEntity.ok(productService.getAllProducts());
    }

    @GetMapping("/{id}")
    public ResponseEntity<Product> getProductById(@PathVariable UUID id) {
        return ResponseEntity.ok(productService.getProductById(id));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteProduct(@PathVariable UUID id) {
        productService.deleteProduct(id);
        return ResponseEntity.noContent().build();
    }
}
// End of ProductController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\UserController.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;
import com.example.FBJV24001115synergy7firbinfudch6.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("/api/users")
public class UserController {

    @Autowired
    private UserService userService;

    @PostMapping
    public ResponseEntity<Users> registerUser(@RequestBody Users user) {
        return ResponseEntity.ok(userService.registerUser(user));
    }

    @PutMapping("/{id}")
    public ResponseEntity<Users> updateUser(@PathVariable UUID id, @RequestBody Users user) {
        user.setId(id);
        return ResponseEntity.ok(userService.updateUser(user));
    }

    @GetMapping
    public ResponseEntity<List<Users>> getAllUsers() {
        return ResponseEntity.ok(userService.getAllUsers());
    }

    @GetMapping("/{id}")
    public ResponseEntity<Users> getUserById(@PathVariable UUID id) {
        return ResponseEntity.ok(userService.getUserById(id));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteUser(@PathVariable UUID id) {
        userService.deleteUser(id);
        return ResponseEntity.noContent().build();
    }
}
// End of UserController.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\controller\UserDetailServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.controller;

public class UserDetailServiceImpl {
}

// End of UserDetailServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\accounts\ERole.java
package com.example.FBJV24001115synergy7firbinfudch6.model.accounts;

public enum ERole {
    ROLE_USER,
    ROLE_MERCHANT,
}
// End of ERole.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\accounts\Role.java
package com.example.FBJV24001115synergy7firbinfudch6.model.accounts;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.util.UUID;

@Setter
@Getter
@Entity
@Table(name = "roles")
public class Role {
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    @Enumerated(EnumType.STRING)
    private ERole name;
}

// End of Role.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\accounts\Users.java
package com.example.FBJV24001115synergy7firbinfudch6.model.accounts;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.BaseModel;
import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Orders;
import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.*;

import java.util.List;
import java.util.UUID;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "users")
public class Users extends BaseModel {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    private String username;
    private String emailAddress;
    private String password;

    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, targetEntity = Orders.class)
    @JsonIgnore
    private List<Orders> orders;
}

// End of Users.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\dto\MerchantDTO.java
package com.example.FBJV24001115synergy7firbinfudch6.model.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class MerchantDTO {
    private String merchantName;
    private String merchantLocation;
    private Boolean open;
}

// End of MerchantDTO.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\dto\OrderDetailDTO.java
package com.example.FBJV24001115synergy7firbinfudch6.model.dto;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class OrderDetailDTO {
    private Integer quantity;
    private BigDecimal totalPrice;
    private ProductDTO product;
}
// End of OrderDetailDTO.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\dto\OrderDTO.java
package com.example.FBJV24001115synergy7firbinfudch6.model.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class OrderDTO {
    private String destinationAddress;
    private Boolean completed;
    private UserDTO user;
    private List<OrderDetailDTO> orderDetails;
}

// End of OrderDTO.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\dto\ProductDTO.java
package com.example.FBJV24001115synergy7firbinfudch6.model.dto;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ProductDTO {
    private String productName;
    private Double price;
}
// End of ProductDTO.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\dto\UserDTO.java
package com.example.FBJV24001115synergy7firbinfudch6.model.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UserDTO {
    private String username;
    private String emailAddress;
    private String password;
    private List<OrderDTO> orders;
}

// End of UserDTO.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\entity\BaseModel.java
package com.example.FBJV24001115synergy7firbinfudch6.model.entity;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.io.Serializable;
import java.util.Date;

@Getter
@Setter
@MappedSuperclass
@EntityListeners(AuditingEntityListener.class)
public class BaseModel implements Serializable {
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, updatable = false)
    @CreatedDate
    private Date createdDate;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_date", nullable = false)
    @LastModifiedDate
    private Date updatedDate;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "deleted_date")
    private Date deletedDate;
}
// End of BaseModel.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\entity\Merchant.java
package com.example.FBJV24001115synergy7firbinfudch6.model.entity;

import jakarta.persistence.*;
import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.SQLRestriction;

import java.util.List;
import java.util.UUID;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "merchant")
@SQLDelete(sql = "UPDATE merchant SET deleted = true WHERE id = ?")
@SQLRestriction("deleted_date IS NULL")
public class Merchant extends BaseModel {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    private String merchantName;
    private String merchantLocation;
    private Boolean open;

    @OneToMany(mappedBy = "merchant", cascade = CascadeType.ALL, targetEntity = Product.class)
    @JsonIgnore
    private List<Product> products;
}

// End of Merchant.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\entity\OrderDetail.java
package com.example.FBJV24001115synergy7firbinfudch6.model.entity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.SQLRestriction;

import java.math.BigDecimal;
import java.util.UUID;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "order_detail")
@SQLDelete(sql = "UPDATE order_detail SET deleted_date = current_timestamp WHERE id = ?")
@SQLRestriction("deleted_date IS NULL")
public class OrderDetail extends BaseModel {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    private Integer quantity;
    private BigDecimal totalPrice;

    @ManyToOne(targetEntity = Orders.class)
    @JoinColumn(name = "order_id")
    @JsonIgnore
    private Orders order;

    @ManyToOne(targetEntity = Product.class)
    @JoinColumn(name = "product_id")
    private Product product;
}

// End of OrderDetail.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\entity\Orders.java
package com.example.FBJV24001115synergy7firbinfudch6.model.entity;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.SQLRestriction;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "orders")
@SQLDelete(sql = "UPDATE orders SET deleted_date = current_timestamp WHERE id = ?")
@SQLRestriction("deleted_date IS NULL")
public class Orders extends BaseModel {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    private Date orderTime;
    private String destinationAddress;
    private Boolean completed;

    @ManyToOne(targetEntity = Users.class)
    @JoinColumn(name = "user_id")
    private Users user;

    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = OrderDetail.class)
    private List<OrderDetail> orderDetails = new ArrayList<>();
}

// End of Orders.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\model\entity\Product.java
package com.example.FBJV24001115synergy7firbinfudch6.model.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.SQLDelete;
import org.hibernate.annotations.SQLRestriction;

import java.util.List;
import java.util.UUID;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "product")
@SQLDelete(sql = "UPDATE product SET deleted_date = current_timestamp WHERE id = ?")
@SQLRestriction("deleted_date IS NULL")
public class Product extends BaseModel {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    private String productName;
    private Double price;

    @ManyToOne(targetEntity = Merchant.class)
    @JoinColumn(name = "merchant_id")
    private Merchant merchant;

    @OneToMany(mappedBy = "product", cascade = CascadeType.ALL, targetEntity = OrderDetail.class)
    @JsonIgnore
    private List<OrderDetail> orderDetails;
}
// End of Product.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\repository\MerchantRepository.java
package com.example.FBJV24001115synergy7firbinfudch6.repository;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;
import java.util.UUID;

public interface MerchantRepository extends JpaRepository<Merchant, UUID> {
    List<Merchant> findByOpen(boolean isOpen);
    @Query(value = "SELECT p.product_name, p.price FROM product p INNER JOIN merchant m ON p.merchant_id = m.id WHERE m.merchant_name = :merchantName", nativeQuery = true)
    List<Object[]> findAllProductsByMerchantName(@Param("merchantName") String merchantName);
}

// End of MerchantRepository.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\repository\OrderDetailRepository.java
package com.example.FBJV24001115synergy7firbinfudch6.repository;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.OrderDetail;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.UUID;

public interface OrderDetailRepository extends JpaRepository<OrderDetail, UUID> {

}

// End of OrderDetailRepository.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\repository\OrderRepository.java
package com.example.FBJV24001115synergy7firbinfudch6.repository;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Orders;
import org.springframework.data.jpa.repository.JpaRepository;
import java.util.UUID;

public interface OrderRepository extends JpaRepository<Orders, UUID> {

}

// End of OrderRepository.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\repository\ProductRepository.java
package com.example.FBJV24001115synergy7firbinfudch6.repository;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Product;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.UUID;

public interface ProductRepository extends JpaRepository<Product, UUID> {
}

// End of ProductRepository.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\repository\UserRepository.java
package com.example.FBJV24001115synergy7firbinfudch6.repository;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.security.core.userdetails.User;

import java.util.Optional;
import java.util.UUID;

public interface UserRepository extends JpaRepository<Users, UUID> {

    Optional<Users> findByUsername(String username);
//    Page<Users> findByUsernameContaining(String username, Pageable pageable);
//
//    @Procedure(procedureName  = "procedure_create_user")
//    void registerUser(@Param("c_username") String username, @Param("c_email") String email, @Param("c_pw")  String password);
//
//    @Procedure(procedureName = "procedure_update_user")
//    void updateUser(UUID new_id, String new_username, String new_email, String new_password);
//
//    @Procedure(procedureName = "procedure_delete_user")
//    void deleteUser(UUID user_id);
}
// End of UserRepository.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\security\SecurityConfig.java
package com.example.FBJV24001115synergy7firbinfudch6.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableMethodSecurity
public class SecurityConfig {
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http.csrf(AbstractHttpConfigurer::disable)
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers("/api/users", "/login")
                        .permitAll()
                        .requestMatchers("/login")
                        .permitAll()
                        .anyRequest()
                        .authenticated());
        return http.build();
    }

    @Bean
    public PasswordEncoder passwordEncoder(){
        return new BCryptPasswordEncoder();
    }

//    @Bean
//    public DaoAuthenticationProvider authenticationProvider(){
//        DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
//        authenticationProvider.setPasswordEncoder(passwordEncoder());
//        authenticationProvider.setUserDetailsService(userDetailsService);
//        return authenticationProvider;
//    }
}

// End of SecurityConfig.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\security\UserDetailServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.security;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;
import com.example.FBJV24001115synergy7firbinfudch6.repository.UserRepository;
import org.springframework.boot.autoconfigure.security.SecurityProperties;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

@Service
public class UserDetailServiceImpl implements UserDetailsService {

    private final UserRepository userRepository;

    public UserDetailServiceImpl(UserRepository userRepository){
        this.userRepository = userRepository;
    }

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
//        Users user = userRepository.findByUsername(username)
//                .orElseThrow(()-> new UsernameNotFoundException("Username not found: " + username));
//        return UserDetailsImpl.build(user);
        return null;
    }
}

// End of UserDetailServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\security\UserDetailsImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.security;

public class UserDetailsImpl {
}

// End of UserDetailsImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\MerchantService.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;

import java.util.List;
import java.util.UUID;

public interface MerchantService {
    Merchant addMerchant(Merchant merchant);

    Merchant updateMerchantStatus(UUID merchantId, boolean isOpen);

    Merchant getMerchantById(UUID id);

    List<Merchant> getOpenMerchants();

    void deleteMerchant(UUID id);
}
// End of MerchantService.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\MerchantServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;
import com.example.FBJV24001115synergy7firbinfudch6.repository.MerchantRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.*;

import java.util.List;
import java.util.UUID;

@Service
public class MerchantServiceImpl implements MerchantService {
    @Autowired
    private MerchantRepository merchantRepository;

    @Override
    public Merchant addMerchant(Merchant merchant) {
        return merchantRepository.save(merchant);
    }

    @Override
    public Merchant updateMerchantStatus(UUID merchantId, boolean isOpen) {
        Merchant merchant = merchantRepository.findById(merchantId)
                .orElseThrow(() -> new IllegalArgumentException("Merchant not found"));
        merchant.setOpen(isOpen);
        return merchantRepository.save(merchant);
    }

    @Override
    public Merchant getMerchantById(UUID id) {
        return merchantRepository.findById(id)
                .orElseThrow(() -> new IllegalArgumentException("Merchant not found"));
    }

    @Override
    public List<Merchant> getOpenMerchants() {
        return merchantRepository.findByOpen(true);
    }

    @Override
    public void deleteMerchant(UUID id) {
        Merchant merchant = merchantRepository.findById(id)
                .orElseThrow(() -> new IllegalArgumentException("Merchant not found"));
        merchant.setDeletedDate(new Date());
        merchantRepository.save(merchant);
    }
}
// End of MerchantServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\OrderDetailService.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.OrderDetail;

import java.util.List;
import java.util.UUID;

public interface OrderDetailService {
    OrderDetail addOrderDetail(OrderDetail orderDetail);
    void deleteOrderDetail(UUID id);
    OrderDetail updateOrderDetail(OrderDetail orderDetail);
    List<OrderDetail> getAllOrderDetails();
    OrderDetail getOrderDetailById(UUID id);
}

// End of OrderDetailService.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\OrderDetailServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.OrderDetail;
import com.example.FBJV24001115synergy7firbinfudch6.repository.OrderDetailRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.UUID;

@Service
public class OrderDetailServiceImpl implements OrderDetailService {
    @Autowired
    private OrderDetailRepository orderDetailRepository;

    @Override
    public OrderDetail addOrderDetail(OrderDetail orderDetail) {
        return orderDetailRepository.save(orderDetail);
    }

    @Override
    public void deleteOrderDetail(UUID id) {
        orderDetailRepository.deleteById(id);
    }

    @Override
    public OrderDetail updateOrderDetail(OrderDetail orderDetail) {
        return orderDetailRepository.save(orderDetail);
    }

    @Override
    public List<OrderDetail> getAllOrderDetails() {
        return orderDetailRepository.findAll();
    }

    @Override
    public OrderDetail getOrderDetailById(UUID id) {
        return orderDetailRepository.findById(id).orElse(null);
    }
}

// End of OrderDetailServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\OrderService.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Orders;

import java.util.List;
import java.util.UUID;

public interface OrderService {
    Orders createOrder(Orders order);

    Orders getOrderById(UUID id);
    List<Orders> getAllOrders();
}
// End of OrderService.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\OrderServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.OrderDetail;
import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Orders;
import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Product;
import com.example.FBJV24001115synergy7firbinfudch6.repository.OrderDetailRepository;
import com.example.FBJV24001115synergy7firbinfudch6.repository.OrderRepository;
import com.example.FBJV24001115synergy7firbinfudch6.repository.ProductRepository;
import jakarta.transaction.Transactional;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

@Service
public class OrderServiceImpl implements OrderService {
    private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private OrderDetailRepository orderDetailRepository;

    @Autowired
    private ProductRepository productRepository;

    @Transactional
    @Override
    public Orders createOrder(Orders order) {
        logger.info("Creating order: {}", order);
        order.setOrderTime(new Date());

        if (order.getOrderDetails() == null) {
            order.setOrderDetails(new ArrayList<>());
        }

        List<OrderDetail> orderDetails = new ArrayList<>();
        for (OrderDetail detail : order.getOrderDetails()) {
            logger.info("Processing OrderDetail: {}", detail);
            Product product = productRepository.findById(detail.getProduct().getId())
                    .orElseThrow(() -> new IllegalArgumentException("Product not found"));

            detail.setOrder(order);
            detail.setTotalPrice(BigDecimal.valueOf(detail.getQuantity()).multiply(BigDecimal.valueOf(product.getPrice())));
            logger.info("OrderDetail after setting order and total price: {}", detail);
            orderDetails.add(detail);
        }

        order.setOrderDetails(orderDetails);
        Orders savedOrder = orderRepository.save(order);
        logger.info("Saved order: {}", savedOrder);

        for (OrderDetail detail : orderDetails) {
            logger.info("Saving OrderDetail: {}", detail);
            orderDetailRepository.save(detail);
            logger.info("Saved OrderDetail: {}", detail);
        }

        savedOrder = orderRepository.findById(savedOrder.getId()).orElseThrow(() -> new IllegalArgumentException("Order not found after save"));
        logger.info("Saved order with details: {}", savedOrder);

        return savedOrder;
    }

    @Override
    public List<Orders> getAllOrders() {
        return orderRepository.findAll();
    }

    @Override
    public Orders getOrderById(UUID id) {
        return orderRepository.findById(id)
                .orElseThrow(() -> new IllegalArgumentException("Order not found"));
    }
}

// End of OrderServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\ProductService.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Product;

import java.util.List;
import java.util.UUID;

public interface ProductService {
    Product addProduct(Product product);

    Product updateProduct(Product product);

    void deleteProduct(UUID productId);

    Product getProductById(UUID productId);

    List<Product> getAllProducts();
}

// End of ProductService.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\ProductServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Merchant;
import com.example.FBJV24001115synergy7firbinfudch6.model.entity.Product;
import com.example.FBJV24001115synergy7firbinfudch6.repository.MerchantRepository;
import com.example.FBJV24001115synergy7firbinfudch6.repository.ProductRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;
import java.util.UUID;

@Service
public class ProductServiceImpl implements ProductService {
    @Autowired
    private ProductRepository productRepository;

    @Autowired
    private MerchantRepository merchantRepository;

//    @Override
//    public Product addProduct(Product product) {
//        return productRepository.save(product);
//    }

    @Override
    public Product addProduct(Product product) {
        UUID merchantId = product.getMerchant().getId();
        Merchant merchant = merchantRepository.findById(merchantId)
                .orElseThrow(() -> new IllegalArgumentException("Merchant not found"));
        product.setMerchant(merchant);

        if (product.getPrice() == null) {
            throw new IllegalArgumentException("Product price cannot be null");
        }

        return productRepository.save(product);
    }

    @Override
    public Product updateProduct(Product product) {
        return productRepository.save(product);
    }

    @Override
    public void deleteProduct(UUID productId) {
        Product product = productRepository.findById(productId)
                .orElseThrow(() -> new IllegalArgumentException("Product not found"));
        product.setDeletedDate(new Date());
        productRepository.save(product);
    }

    @Override
    public Product getProductById(UUID productId) {
        return productRepository.findById(productId)
                .orElseThrow(() -> new IllegalArgumentException("Product not found"));
    }

    @Override
    public List<Product> getAllProducts() {
        return productRepository.findAll();
    }
}

// End of ProductServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\UserService.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;

import java.util.List;
import java.util.UUID;

public interface UserService {
    Users getUserById(UUID userId);

    void deleteUser(UUID userId);

    Users registerUser(Users user);

    Users updateUser(Users user);

    List<Users> getAllUsers();
}


// End of UserService.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\service\UserServiceImpl.java
package com.example.FBJV24001115synergy7firbinfudch6.service;

import com.example.FBJV24001115synergy7firbinfudch6.model.accounts.Users;
import com.example.FBJV24001115synergy7firbinfudch6.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;
import java.util.UUID;

@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserRepository userRepository;

    @Override
    public Users registerUser(Users user) {
        return userRepository.save(user);
    }

    @Override
    public Users updateUser(Users user) {
        return userRepository.save(user);
    }

    @Override
    public void deleteUser(UUID userId) {
        Users user = userRepository.findById(userId)
                .orElseThrow(() -> new IllegalArgumentException("User not found"));
        user.setDeletedDate(new Date());
        userRepository.save(user);
    }

    @Override
    public Users getUserById(UUID userId) {
        return userRepository.findById(userId)
                .orElseThrow(() -> new IllegalArgumentException("User not found"));
    }

    @Override
    public List<Users> getAllUsers() {
        return userRepository.findAll();
    }
}
// End of UserServiceImpl.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\view\MerchantView.java
package com.example.FBJV24001115synergy7firbinfudch6.view;

import org.springframework.stereotype.Component;

@Component
public class MerchantView {

    public void displayMerchantMenu() {
        System.out.println("Merchant Services:");
        System.out.println("1. Add Merchant");
        System.out.println("2. Edit Merchant Status");
        System.out.println("3. Show Open Merchants");
        System.out.println("4. Show Products of Merchant by Merchant Name");
        System.out.println("0. Return to Main Menu");
        System.out.println("\nYour choice: ");
    }

//    public void displayProducts(List<Product> products) {
//        if (products.isEmpty()) {
//            System.out.println("No products found for this merchant.");
//        } else {
//            products.forEach(product -> System.out.println(product.getProductName() + " - " + product.getPrice()));
//        }
//    }
}

// End of MerchantView.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\view\OrderView.java
package com.example.FBJV24001115synergy7firbinfudch6.view;

import org.springframework.stereotype.Component;

import java.util.Scanner;

@Component
public class OrderView {

    public void displayOrderMenu() {
        System.out.println("Order Services:");
        System.out.println("1. Create Order");
        System.out.println("2. Display Orders");
        System.out.println("0. Return to Main Menu");
        System.out.println("\nYour choice: ");
    }

    public int getOrderChoice(Scanner scanner) {
        return scanner.nextInt();
    }
}

// End of OrderView.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\view\ProductView.java
package com.example.FBJV24001115synergy7firbinfudch6.view;

import org.springframework.stereotype.Component;

import java.util.Scanner;

@Component
public class ProductView {

    public void displayProductMenu() {
        System.out.println("Product Services:");
        System.out.println("1. Add Product");
        System.out.println("2. Update Product");
        System.out.println("3. Delete Product");
        System.out.println("4. Show Available Products");
        System.out.println("0. Return to Main Menu");
        System.out.println("\nYour choice: ");
    }

    public int getProductChoice(Scanner scanner) {
        return scanner.nextInt();
    }
}

// End of ProductView.java

// C:\Users\Panji\Documents\Backend Java SYNRGY Academy\SYNRGY7_BEJ_FirmanPanjiUtama\F-BJV24001115-synergy7-fir-binfud-ch6\src\main\java\com\example\FBJV24001115synergy7firbinfudch6\view\UserView.java
package com.example.FBJV24001115synergy7firbinfudch6.view;

import org.springframework.stereotype.Component;

import java.util.Scanner;

@Component
public class UserView {

    public int displayMainMenu(Scanner scanner) {
        System.out.println("\nWelcome to our application");
        System.out.println("1. Register");
        System.out.println("2. Login");
        System.out.println("0. Exit");
        System.out.print("Enter your choice: ");
        return scanner.nextInt();
    }

    public String[] getRegistrationDetails(Scanner scanner) {
        scanner.nextLine();
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        System.out.print("Enter email address: ");
        String email = scanner.nextLine();
        return new String[]{username, password, email};
    }

    public String[] getLoginDetails(Scanner scanner) {
        scanner.nextLine();
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();
        return new String[]{username, password};
    }

    public void displayLoginSuccess() {
        System.out.println("Login successful.");
    }

    public void displayLoginFailed() {
        System.out.println("Login failed.");
    }

    public void displayInvalidChoice() {
        System.out.println("Invalid choice. Please try again.");
    }

    public void displayWelcome() {
        System.out.println("""
                ================================================
                Selamat datang di Binarfud - Panji
                ================================================
                Silahkan pilih service berdasarkan model:
                
                1. Merchant
                2. Products
                3. Users
                4. Order
                
                Pilihan anda:
                """);
    }

    public void displayUserMenu() {
        System.out.println("User Services:");
        System.out.println("1. Create User");
        System.out.println("2. Update User");
        System.out.println("3. Delete User");
        System.out.println("4. Search Username");
        System.out.println("0. Return to Main Menu");
        System.out.println("\nYour choice: ");
    }
}

// End of UserView.java

